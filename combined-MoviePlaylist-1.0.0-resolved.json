{
  "openapi": "3.0.0",
  "info": {
    "title": "Movie Watchlist API",
    "description": "This is a movie watchlist API where users can add or remove titles from their watchlist, as well as provide ratings.",
    "contact": {
      "email": "fli34@jh.edu"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/rbird5JHU/MoviePlaylist/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://virtserver.swaggerhub.com/service-apis5/FinalProject/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Watchlist",
      "description": "APIs that revolve around the watchlist"
    },
    {
      "name": "Authentication",
      "description": "APIs for logging in and out of the API"
    },
    {
      "name": "Users",
      "description": "APIs for creating new users"
    },
    {
      "name": "Media",
      "description": "APIs for searching media"
    }
  ],
  "paths": {
    "/watchlist": {
      "post": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Creates a new Watchlist for the calling user",
        "description": "Creates a new Watchlist for the calling user\n",
        "responses": {
          "201": {
            "description": "item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            }
          }
        }
      }
    },
    "/watchlist/{watchlist_id}": {
      "get": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Retrieve Watchlist",
        "description": "Gets an existing watchlist for the calling user if watchlist exists and the user has permissions to view the Watchlist.\n",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "The id of the watchlist to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            }
          },
          "404": {
            "description": "Watchlist not found for user"
          }
        }
      }
    },
    "/watchlist/{watchlist_id}/media": {
      "post": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Adds Media",
        "description": "Adds a media object to the watchlist\n",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "The id of the watchlist to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Media data to add to watchlist",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MediaItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "item created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            }
          },
          "404": {
            "description": "Watchlist not found for user"
          }
        }
      }
    },
    "/watchlist/{watchlist_id}/visibility": {
      "put": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Set Visibility",
        "description": "Sets the IsPublic attribute for the watchlist\n",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "The id of the watchlist to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/VisibilityRequest"
        },
        "responses": {
          "200": {
            "description": "Watchlist updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            }
          },
          "404": {
            "description": "Watchlist not found for user"
          }
        }
      }
    },
    "/watchlist/{watchlist_id}/media/{media_id}": {
      "delete": {
        "tags": [
          "Watchlist"
        ],
        "summary": "Set Visibility",
        "description": "Sets the IsPublic attribute for the watchlist\n",
        "parameters": [
          {
            "name": "watchlist_id",
            "in": "path",
            "description": "The id of the watchlist to retrieve",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "media_id",
            "in": "path",
            "description": "The id of the media to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media deleted from Watchlist"
          },
          "404": {
            "description": "Watchlist or Media not found for user"
          }
        }
      }
    },
    "/api/auth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to MovieWatchlistAPI",
        "description": "User passes in basic credentials in exchange for access token upon successful authentication",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCredentials"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCredentials"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Invalidate access token",
        "description": "Invalidates the access token passed in the Authentication header",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of users",
        "description": "Get a list of registered users",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Register new user to the API",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        }
      }
    },
    "/api/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Search the IMDB database",
        "description": "Pass in a query string to get a list of media to add to your watchlist",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchData"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/media/{mediaId}": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get metadata about specific media",
        "description": "Get additional metadata regarding a specific media by ID",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TitleData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TitleData"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/media/{mediaId}/ratings": {
      "post": {
        "tags": [
          "Media"
        ],
        "summary": "Update the ratings for the provided media",
        "description": "Rate the media item on a scale of 1 to 5 stars",
        "parameters": [
          {
            "name": "mediaId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRating"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserRating"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "MediaItem": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint32",
            "example": 5
          },
          "name": {
            "type": "string",
            "example": "The Good Doctor"
          }
        }
      },
      "Watchlist": {
        "required": [
          "id",
          "isPubliclyViewable",
          "mediaItems",
          "ownerUserId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "isPubliclyViewable": {
            "type": "boolean",
            "example": true
          },
          "ownerUserId": {
            "type": "integer",
            "example": 3
          },
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            }
          }
        }
      },
      "ActorShort": {
        "name": "ActorShort",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "nm0306201"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": "https://imdb-api.com/images/original/MV5BMTUyNTkxODIxN15BMl5BanBnXkFtZTgwOTU2MDAwMTE@._V1_Ratio1.0000_AL_.jpg"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Jorge Garcia"
          },
          "asCharacter": {
            "type": "string",
            "nullable": true,
            "example": "Hugo 'Hurley"
          }
        },
        "additionalProperties": false
      },
      "KeyValueItem": {
        "name": "KeyValueItem",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchData": {
        "name": "SearchData",
        "required": [
          "expression",
          "searchType"
        ],
        "type": "object",
        "properties": {
          "searchType": {
            "type": "string",
            "example": "Title"
          },
          "expression": {
            "type": "string",
            "example": "Frozen"
          },
          "results": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            }
          },
          "errorMessage": {
            "type": "string",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "SearchResult": {
        "name": "SearchResult",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "tt123456"
          },
          "resultType": {
            "type": "string",
            "nullable": true,
            "example": "Title"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": "https://imdb-api.com/images/original/MV5BMjI0NTQ4MzgxMl5BMl5BanBnXkFtZTcwMzI1MzU2Nw@@._V1_Ratio1.0714_AL_.jpg"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Frozen"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "When the newly crowned Queen Elsa accidentally uses her power to turn things into ice to curse her home in infinite winter, her sister Anna teams up with a mountain man, his playful reindeer, and a snowman to change the weather condition."
          }
        },
        "additionalProperties": false
      },
      "TitleData": {
        "name": "TitleData",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true,
            "example": "tt0411008"
          },
          "ratings": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserRating"
            }
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Lost"
          },
          "originalTitle": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "fullTitle": {
            "type": "string",
            "nullable": true,
            "example": "Lost (TV Series 2004–2010)"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "example": "TVSeries"
          },
          "year": {
            "type": "string",
            "nullable": true,
            "example": "2004"
          },
          "image": {
            "type": "string",
            "nullable": true,
            "example": "https://imdb-api.com/images/original/MV5BNzhlY2E5NDUtYjJjYy00ODg3LWFkZWQtYTVmMzU4ZWZmOWJkXkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_Ratio0.6751_AL_.jpg"
          },
          "releaseDate": {
            "type": "string",
            "nullable": true,
            "example": "2004-09-22"
          },
          "runtimeMins": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "runtimeStr": {
            "type": "string",
            "nullable": true,
            "example": null
          },
          "plot": {
            "type": "string",
            "nullable": true,
            "example": "The past, present, and future lives of surviving Oceanic Flight 815 passengers are dramatically intertwined as a fight for survival ensues in a quest for answers after crashlanding on a mysterious island. Each discovery prompts yet more secrets, as the hastily-formed colony search for a way off the island, or is this their home?"
          },
          "actorList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ActorShort"
            }
          },
          "genres": {
            "type": "string",
            "nullable": true,
            "example": "Adventure, Drama, Fantasy"
          },
          "genreList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/KeyValueItem"
            }
          }
        },
        "additionalProperties": false
      },
      "UserDetails": {
        "name": "UserDetails",
        "required": [
          "email",
          "id",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "JohnSmith123@jh.edu"
          }
        }
      },
      "UserCredentials": {
        "name":"UserCredentials",
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "uuid",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "JohnSmith123@jh.edu"
          },
          "password": {
            "type": "string",
            "example": "Password123"
          }
        }
      },
      "TokenCredentials": {
        "name": "TokenCredentials",
        "required": [
          "accessToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "format": "token",
            "example": "Bearer ey122asd..."
          }
        }
      },
      "UserRating": {
        "name": "UserRating",
        "type": "object",
        "properties": {
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "example": 4
          }
        }
      }
    },
    "requestBodies": {
      "VisibilityRequest": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "IsPublic"
              ],
              "type": "object",
              "properties": {
                "IsPublic": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "IsPublic"
              ],
              "type": "object",
              "properties": {
                "IsPublic": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "Visibility"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}